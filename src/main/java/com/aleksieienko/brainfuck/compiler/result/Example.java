package com.aleksieienko.brainfuck.compiler.result;

import com.aleksieienko.brainfuck.compiler.data.Data;
import com.aleksieienko.brainfuck.compiler.commands.Command;
import com.aleksieienko.brainfuck.compiler.commands.CycleCommand;
import com.aleksieienko.brainfuck.compiler.commands.DecrementCommand;
import com.aleksieienko.brainfuck.compiler.commands.IncrementCommand;
import com.aleksieienko.brainfuck.compiler.commands.NextCellCommand;
import com.aleksieienko.brainfuck.compiler.commands.PrevCellCommand;
import com.aleksieienko.brainfuck.compiler.commands.PrintCommand;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;

@SuppressWarnings("unchecked")
public class Example{
	public static void main(String[] args) {
		Data data = new Data();
		Queue<Command> commands = new LinkedList();
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new CycleCommand(Arrays.asList(new NextCellCommand(),new IncrementCommand(),new IncrementCommand(),new IncrementCommand(),new IncrementCommand(),new IncrementCommand(),new IncrementCommand(),new IncrementCommand(),new NextCellCommand(),new IncrementCommand(),new IncrementCommand(),new IncrementCommand(),new IncrementCommand(),new IncrementCommand(),new IncrementCommand(),new IncrementCommand(),new IncrementCommand(),new IncrementCommand(),new IncrementCommand(),new NextCellCommand(),new IncrementCommand(),new IncrementCommand(),new IncrementCommand(),new NextCellCommand(),new IncrementCommand(),new PrevCellCommand(),new PrevCellCommand(),new PrevCellCommand(),new PrevCellCommand(),new DecrementCommand())));
		commands.add(new NextCellCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new PrintCommand());
		commands.add(new NextCellCommand());
		commands.add(new IncrementCommand());
		commands.add(new PrintCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new PrintCommand());
		commands.add(new PrintCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new PrintCommand());
		commands.add(new NextCellCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new PrintCommand());
		commands.add(new PrevCellCommand());
		commands.add(new PrevCellCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new PrintCommand());
		commands.add(new NextCellCommand());
		commands.add(new PrintCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new IncrementCommand());
		commands.add(new PrintCommand());
		commands.add(new DecrementCommand());
		commands.add(new DecrementCommand());
		commands.add(new DecrementCommand());
		commands.add(new DecrementCommand());
		commands.add(new DecrementCommand());
		commands.add(new DecrementCommand());
		commands.add(new PrintCommand());
		commands.add(new DecrementCommand());
		commands.add(new DecrementCommand());
		commands.add(new DecrementCommand());
		commands.add(new DecrementCommand());
		commands.add(new DecrementCommand());
		commands.add(new DecrementCommand());
		commands.add(new DecrementCommand());
		commands.add(new DecrementCommand());
		commands.add(new PrintCommand());
		commands.add(new NextCellCommand());
		commands.add(new IncrementCommand());
		commands.add(new PrintCommand());
		commands.add(new NextCellCommand());
		commands.add(new PrintCommand());
		Command command;
		while((command = commands.poll()) != null) {
			command.execute(data);
		}
	}
}